# Rime schema
# encoding: utf-8

schema:
  schema_id: jk_pinyin
  name: 拼音·知心
  author:
    - by Jack Liu <https://aituyaa.com>
  description: |
    - 知心拼音，全拼+五笔前二辅助码，小啊小拼音
    - 基于袖珍简化字拼音及自制通规8105单字表
    - 支持全拼
    - 小鹤双拼+五笔前二增强版「 默认 」
  dependencies:
    - jk_ascii
  icon: 'assets/fly_b.ico'
  ascii_icon: 'assets/ascii.ico'

switches:
  __include: jk.yaml:/switches

engine:
  processors:
    - ascii_composer
    - chord_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator@custom_phrase
    - script_translator
    - reverse_lookup_translator
    - lua_translator@*date_translator
    - lua_translator@*force_gc
  filters:
    - lua_filter@*pro_comment_format
    - lua_filter@*prettify_comment
    - simplifier
    - simplifier@emoji
    - simplifier@zh2en
    - uniquifier
    - simplifier@chaifen

pro_comment_format:
  fuzhu_code: true
  candidate_length: 1
  fuzhu_type: flypy



speller:
  # [ ✗上屏 ]
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA~
  # [ ✓上屏 ]
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA`
  delimiter: " '"
  # 支持：
  # ① 全拼            algebra_pinyin 
  # ② 小鹤/五笔前二    algebra_flypy
  algebra:
    __include: algebra_flypy

algebra_pinyin: 
  # - xlit/āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜü/aaaaooooeeeeiiiiuuuuvvvvv/
  #- erase/^xx;.*$/
  # - xform/(;.*)$//
  - derive/(;.*)$//
  # - derive/;//
  - abbrev/^([a-z]).+$/$1/
  - derive/^([a-z])$/$1/
  # --- 辅助码 ---
  # - abbrev|^(.+);.*$|$1|                 
  - derive|^(.+);.*$|$1|                 
  - derive|^(.+);(\w)(\w).*$|$1$2|       
  - abbrev|^(.+);(\w)(\w).*$|$1$2$3|     
  - derive|^(.+);(\w)(\w).*$|$1$2$3o|    
  - derive|^(.+);.*?,(\w)(\w).*$|$1$2|   
  - abbrev|^(.+);.*?,(\w)(\w).*$|$1$2$3| 
  - derive|^(.+);.*?,(\w)(\w).*$|$1$2$3o|

algebra_flypy:
  # - erase/^xx$/
  # - xlit/āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜü/aaaaooooeeeeiiiiuuuuvvvvv/
  - derive/^([jqxy])u(;.*)$/$1v$2/
  - derive/^([aoe])([ioun])(;.*)$/$1$1$2$3/
  - xform/^([aoe])(ng)?(;.*)$/$1$1$2$3/
  - xform/^(\w+?)iu(;.*)/$1Ⓠ$2/
  - xform/^(\w+?)ei(;.*)/$1Ⓦ$2/
  - xform/^(\w+?)uan(;.*)/$1Ⓡ$2/
  - xform/^(\w+?)[uv]e(;.*)/$1Ⓣ$2/
  - xform/^(\w+?)un(;.*)/$1Ⓨ$2/
  - xform/^(\w+?)uo(;.*)/$1Ⓞ$2/
  - xform/^(\w+?)ie(;.*)/$1Ⓟ$2/
  - xform/^(\w+?)i?ong(;.*)/$1Ⓢ$2/
  - xform/^(\w+?)ing(;.*)/$1Ⓚ$2/
  - xform/^(\w+?)uai(;.*)/$1Ⓚ$2/
  - xform/^(\w+?)ai(;.*)/$1Ⓓ$2/
  - xform/^(\w+?)eng(;.*)/$1Ⓖ$2/
  - xform/^(\w+?)en(;.*)/$1Ⓕ$2/
  - xform/^(\w+?)[iu]ang(;.*)/$1Ⓛ$2/
  - xform/^(\w+?)ang(;.*)/$1Ⓗ$2/
  - xform/^(\w+?)ian(;.*)/$1Ⓜ$2/
  - xform/^(\w+?)an(;.*)/$1Ⓙ$2/
  - xform/^(\w+?)ou(;.*)/$1Ⓩ$2/
  - xform/^(\w+?)iao(;.*)/$1Ⓝ$2/
  - xform/^(\w+?)[iu]a(;.*)/$1Ⓧ$2/
  - xform/^(\w+?)ao(;.*)/$1Ⓒ$2/
  - xform/^(\w+?)ui(;.*)/$1Ⓥ$2/
  - xform/^(\w+?)in(;.*)/$1Ⓑ$2/
  - xform/^sh/Ⓤ/
  - xform/^ch/Ⓘ/
  - xform/^zh/Ⓥ/
  - xlit/ⓆⓌⓇⓉⓎⓊⒾⓄⓅⓈⒹⒻⒼⒽⒿⓀⓁⓏⓍⒸⓋⒷⓃⓂ/qwrtyuiopsdfghjklzxcvbnm/
  - abbrev/^([a-z]).+$/$1/
  - derive/^([a-z])$/$1/
  # --- 辅助码 ---
  # -------------------------------------
  # - abbrev|^(.+);.*$|$1|                                        # 纯双拼的情况「✓ 简拼」
  # - derive|^(.+);.*$|$1|                                        # 纯双拼的情况「✗ 简拼」
  # - derive|^(.+);(\w)(\w).*$|$1$2|                              # 双拼+一位辅助码的情况
  # - abbrev|^(.+);(\w)(\w).*$|$1$2$3|                            # 双拼+2位辅助码的情况，abbrev类型不可以整句内输入2位辅助码，必须加o
  # - derive|^(.+);(\w)(\w).*$|$1$2$3o|                           # 整句模式下，输入syffo 出单字 增强单字性能
  # - derive|^(.+);.*?,(\w)(\w).*$|$1$2|                          # 双拼+一位辅助码的情况
  # - abbrev|^(.+);.*?,(\w)(\w).*$|$1$2$3|                        # 双拼+2位辅助码的情况，abbrev类型不可以整句内输入2位辅助码，必须加o
  # - derive|^(.+);.*?,(\w)(\w).*$|$1$2$3o|                       # 整句模式下，输入syffo 出单字 增强单字性能
  # -------------------------------------
  # - abbrev|^(.+);.*$|$1|               
  - derive|^(.+);.*$|$1|                 
  - derive|^(.+);(\w)(\w).*$|$1$2|       
  - abbrev|^(.+);(\w)(\w).*$|$1$2$3|     
  - derive|^(.+);(\w)(\w).*$|$1$2$3o|    
  - derive|^(.+);.*?,(\w)(\w).*$|$1$2|   
  - abbrev|^(.+);.*?,(\w)(\w).*$|$1$2$3| 
  - derive|^(.+);.*?,(\w)(\w).*$|$1$2$3o|

chord_composer:
  __include: jk.yaml:/chord_composer


translator:
  dictionary: jk_pinyin
  prism: jk_pinyin
  enable_charset_filter: true
  enable_sentence: false
  enable_encoder: true
  encode_commit_history: true
  max_phrase_length: 4
  enable_completion: true
  enable_user_dict: true
  spelling_hints: 1
  comment_format: "{comment}"

date_translator:
  jk_datetime: iii

key_binder:
  import_preset: default

recognizer:
  __include: jk.yaml:/recognizer

punctuator:
  __include: jk.yaml:/punctuator
  
reverse_lookup:
  __include: jk.yaml:/reverse_lookup

custom_phrase:
  __include: jk.yaml:/custom_phrase

emoji:
  __include: jk.yaml:/emoji

zh2en:
  __include: jk.yaml:/zh2en

chaifen:
  __include: jk.yaml:/chaifen
