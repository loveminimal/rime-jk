# Rime schema
# encoding: utf-8

# === 描述档 ===
schema:
  schema_id: flyyx_rime_jk
  name: 知心大鹤
  version: "2024-05-11"
  author:
    - 发明人 gaboolic
    - 撰写者 Jack Liu <loveminimal@163.com>
  description: |
    - 知心大鹤，双拼·辅助码，小啊小大鹤
    - https://github.com/loveminimal/rime-jk
    - 辅助码方案源自 > 墨奇辅助码 鹤拼版
    - https://github.com/gaboolic/rime-shuangpin-fuzhuma
  dependencies:
    - stroke
  version: 3.0.0                         # 版本号，在发布新版前请确保已升级版本号
  icon: "assets/fly_m.ico"
  ascii_icon: 'assets/ascii.ico'


# === 开关 ===
switches:
  - name: ascii_mode                     # 中英文转换开关，0-中文  1-英文
    reset: 0 
    states: [ 中文, 西文 ]
  - name: full_shape                     # 半角/全角转换，0-半角 1-全角
    states: [半角, 全角]
  - name: emoji
    reset: 1
    states: [ 💀, 😄 ]
  - name: chaifen
    reset: 0 
    states: [ 拆隐, 拆显 ]


# === 引擎 ===
engine:
  # --- 处理各类按键消息 ---
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor

  # --- 识别不同内容类型，将输入码分段并加上 tag ---
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor

  # --- 翻译特定类型的编码段为一组候选文字 ---
  translators:
    - punct_translator
    - table_translator@custom_phrase             # 1、2码置顶
    - script_translator
    - reverse_lookup_translator
    - lua_translator@*date_translator    # 时间、日期、星期
    - lua_translator@*force_gc           # 暴力 GC 降低内存
    
  # --- 过滤翻译的结果，自定义滤镜皆可使用开关调控 ---
  filters:
    # lua的filter：
    - lua_filter@*pro_comment_format                #超级注释模块，支持错词错音提示、任意长度辅助码显示，支持个性化配置和关闭相应的功能，详情搜索pro_comment_format进行详细配置
    # - lua_filter@*stick       #简码回显
    # - lua_filter@*is_in_user_dict # 用户词典的词加上一个*
    # 反查的filter
    - simplifier                         # 用字转换，？默认繁转简
    - simplifier@emoji                   # Emoji
    - uniquifier
    - simplifier@chaifen



speller:
  max_code_length: 5
  # table_translator翻译器，支持自动上屏。例如 “zmhu”可以自动上屏“怎么回事”
  auto_select: false
  auto_select_pattern: ^[a-z]+/|^[a-df-zA-DF-Z]\w{3}|^e\w{4}|;[a-z]
  # 如果不想让什么标点直接上屏，可以加在 alphabet，或者编辑标点符号为两个及以上的映射
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA[/|
  # initials 定义仅作为始码的按键，排除 ` 让单个的 ` 可以直接上屏
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  # 第一位<空格>是拼音之间的分隔符；第二位<'>表示可以手动输入单引号来分割拼音。
  delimiter: " '"
  ## speller 未允许 aj 表示 an
  algebra:
    # 这一段是为了支持加载全拼词库
    # - xform/^([aoe])$/$1$1/
    # - xform/^(ang)$/ah/
    # - xform/^([^\[]*)iu$/$1Q/
    # - xform/^([^\[]*)ei$/$1W/
    # - xform/uan$/R/
    # - xform/^([^\[]*)[uv]e$/$1T/
    # - xform/^([^\[]*)un$/$1Y/
    # - xform/^sh([^\[]+)/U$1/
    # - xform/^ch([^\[]+)/I$1/
    # - xform/^zh([^\[]+)/V$1/
    # - xform/^([^\[]*)uo$/$1O/
    # - xform/^([^\[]*)ie$/$1P/
    # - xform/i?ong$/S/
    # - xform/ing$|uai$/K/
    # - xform/^([^\[]+)ai$/$1D/
    # - xform/^([^\[]+)en$/$1F/
    # - xform/^([^\[]+)eng$/$1G/
    # - xform/[iu]ang$/L/
    # - xform/(.)ang$/$1H/
    # - xform/^([^\[]*)ian$/$1M/
    # - xform/^([^\[]+)an$/$1J/
    # - xform/^([^\[]+)ou$/$1Z/
    # - xform/^([^\[]*)[iu]a$/$1X/
    # - xform/^([^\[]*)iao$/$1N/
    # - xform/^([^\[]+)ao$/$1C/
    # - xform/^([^\[]*)ui$/$1V/
    # - xform/^([^\[]*)in$/$1B/
    # - xlit/QWRTYUIOPSDFGHJKLZXCVBNM/qwrtyuiopsdfghjklzxcvbnm/

    # 模糊音 可选择性开启
    # - derive/^z([a-z])/v$1/
    # - derive/^c([a-z])/i$1/
    # - derive/^s([a-z])/u$1/
    # - derive/^v([a-z])/z$1/
    # - derive/^i([a-z])/c$1/
    # - derive/^u([a-z])/s$1/

    # - derive/^([jqxy])u/$1v/ # 开启jv=ju的模式

    - derive|^(.+)[[](\w)(\w)$|$1|       # 纯双拼的情况
    - derive|^(.+)[[](\w)(\w)$|$1$2|     # 双拼+一位辅助码的情况
    - derive|^(.+)[[](\w)(\w)$|$1[$2|    # 双拼+[一位辅助码的情况
    - abbrev|^(.+)[[](\w)(\w)$|$1$2$3|   # 双拼+2位辅助码的情况，abbrev类型不可以整句内输入2位辅助码，必须加o或/
    - derive|^(.+)[[](\w)(\w)$|$1$2$3o|  # 整句模式下，输入syffo 出单字 增强单字性能
    - derive|^(.+)[[](\w)(\w)$|$1$2$3/|  # 整句模式下，输入syff/ 出单字 增强单字性能
    # - derive/[[]// ## 取消注释后：直接引导2位辅助码；否则只能引导1位辅助码或者2位辅助码加/

    ## 飞键 可选择性开启
    - derive/^([y])j/$1f/
    - derive/^qx/qw/
    - derive/^xq/xo/
    - derive/^qq/qo/
    - derive/^ww/wi/
    # - derive/^y([a-df-qs-z])/e$1/ # y -> e互击
    - derive/^j([a-twyz])/f$1/ # j -> f互击
    # - derive/^jn/jv/
    # - derive/^mn/mv/
    # - derive/^jm/jz/
    - derive/^([y])h/$1g/
    # - derive/^([rgv])f/$1m/
    - derive/^([rsgv])c/$1n/

# === segmentor ===
abc_segmentor:
  extra_tags:                            # 为此 segmentor 所标记的段落插上其它 tag
    - reverse_lookup

translator:
  dictionary: flyyx_rime_jk
  # initial_quality: 10000
  # 是否自动补全（预测），酌情开启。开启之后，打ilqmmkyt的时候，2选会是"床前明月光"。但是影响3码简码，例如idz首选会变成"拆字"而非"扯犊子"
  enable_completion: false
  ##  默认为不超过 2 个字的候选项显示输入码；将 2 改为 0 可关闭编码提示，
  ##  改为 1 则是只显示单字的输入码，依此类推。
  spelling_hints: 1
  # enable_sentence: true                  # 是否开启自动造句
  enable_user_dict: true                 # 是否开启用户词典（用户词典记录动态字词频、用户词）
  # enable_encoder: true                   # 是否开启自动造词
  comment_format:
    - "xform/(^|[ '])[^[]+[[]/$1/"       # 编码提示只显示辅助码部分
  preedit_format:
    # 复制用户输入, 一份转大写保持原样, 一份由正则转为全拼显示
    # - xform/(^.*$)/\U$1\E\t => $1 <=/
    # # 小鹤双拼转全拼, 忽略辅码
    # - xform/([ '][aoe])(\w)\w{0,2}/$1$2/
    # - xform/([ ']\w)([aeiou])\w{0,2}/$1$2/
    # - xform/([ '][bpmfdtnljqx])n\w{0,2}/$1iao/
    # - xform/([ ']\w)g\w{0,2}/$1eng/
    # - xform/([ ']\w)q\w{0,2}/$1iu/
    # - xform/([ ']\w)w\w{0,2}/$1ei/
    # - xform/([ '][dtnlgkhjqxyvuirzcs])r\w{0,2}/$1uan/
    # - xform/([ ']\w)t\w{0,2}/$1ve/
    # - xform/([ ']\w)y\w{0,2}/$1un/
    # - xform/([ '][dtnlgkhvuirzcs])o\w{0,2}/$1uo/
    # - xform/([ ']\w)p\w{0,2}/$1ie/
    # - xform/([ '][jqx])s\w{0,2}/$1iong/
    # - xform/([ ']\w)s\w{0,2}/$1ong/
    # - xform/([ ']\w)d\w{0,2}/$1ai/
    # - xform/([ ']\w)f\w{0,2}/$1en/
    # - xform/([ ']\w)h\w{0,2}/$1ang/
    # - xform/([ ']\w)j\w{0,2}/$1an/
    # - xform/([ '][gkhvuirzcs])k\w{0,2}/$1uai/
    # - xform/([ ']\w)k\w{0,2}/$1ing/
    # - xform/([ '][jqxnl])l\w{0,2}/$1iang/
    # - xform/([ ']\w)l\w{0,2}/$1uang/
    # - xform/([ ']\w)z\w{0,2}/$1ou/
    # - xform/([ '][gkhvuirzcs])x\w{0,2}/$1ua/
    # - xform/([ ']\w)x\w{0,2}/$1ia/
    # - xform/([ ']\w)c\w{0,2}/$1ao/
    # - xform/([ '][dtgkhvuirzcs])v\w{0,2}/$1ui/
    # - xform/([ ']\w)b\w{0,2}/$1in/
    # - xform/([ ']\w)m\w{0,2}/$1ian/
    # - "xform/(^|[ '])v/$1zh/"
    # - "xform/(^|[ '])i/$1ch/"
    # - "xform/(^|[ '])u/$1sh/"
    # - xform/([ '][jqxy])v\w{0,2}/$1u/
    # - xform/([ '][nl])v\w{0,2}/$1ü/
    # # 双拼编码大写转回小写
    # - xform/(^[^a-z=<>]*)/\L$1\E/
    # - xform/=> */[/
    # - xform/ *<=/]/

# === Lua 配置: 日期时间(整合版)的触发关键字 ===
date_translator:
  jk_datetime: iii

reverse_lookup:
  dictionary: stroke
  enable_completion: true
  prefix: "`"
  suffix: "'"
  tips: 〔笔画〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xform/([nl])v/$1ü/

# === 自定义短语：custom_phrase.txt ===
custom_phrase:
  dictionary: ""
  user_dict: custom_phrase               # 可以修改这里，改成自己的 txt 文件
  db_class: stabledb                     # 只读数据库，无法动态调频；设为 tabledb 可以动态调频
  enable_completion: false               # 补全提示
  enable_sentence: false                 # 禁止造句
  initial_quality: 99                    # custom_phrase 的权重应该比 pinyin 和 melt_eng 大


# === Emoji ===
emoji:
  option_name: emoji
  opencc_config: emoji.json
  inherit_comment: false                 # 在 corrector.lua 及反查中，emoji 返回空注释

# === 标点符号控制 ===
punctuator:
  import_preset: default                 # 设定符号表，这里直接导入预设的


# === 键位绑定 ===
key_binder:
  import_preset: default
  # 迁移至 default.custom.yaml ，以方便多方案共享


# === 下设 patterns ，配合 segmentor 的 prefix 和 suffix 完成段落划分、tag 分配 ===
recognizer:
  patterns:
    import_preset: default
    reverse_lookup: "`[a-z]*'?$"
