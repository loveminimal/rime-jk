# Rime jk model
# encoding: utf-8

# === 版本 ===
version:
  version: '6.2.0+'


# === 开关 ===
# reset: ← 0 1 →
switches:
  - name: ascii_mode
    reset: 0 
    states: [ 中文, 英文 ]
  # - name: full_shape
  #   states: [半角, 全角]
  - name: emoji
    reset: 1
    states: [ 💀, 😄 ]
  - name: chaifen
    reset: 0
    states: [ 隐拆, 显拆 ]


# === 超级注释模块 ===
pro_comment_format:                   # 超级注释，子项配置 true 开启，false 关闭
  fuzhu_code: true                    # 启用辅助码提醒，用于辅助输入练习辅助码，成熟后可关闭
  candidate_length: 1                 # 候选词辅助码提醒的生效长度，0 为关闭  但同时清空其它，应当使用上面开关来处理    
  fuzhu_type: flypy                   # 用于匹配对应的辅助码注释显示，可选显示类型有：flypy, wubi

# === speller/algebra ===
# --- 全拼 ---
algebra_py: 
  __append: 
    - xlit/āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜü/aaaaooooeeeeiiiiuuuuvvvvv/
    #- erase/^xx;.*$/
    - derive/(;.*)$//
    - derive/;//
    - abbrev/^([a-z]).+$/$1/

# --- 小鹤 ---
algebra_flypy: 
  __append:
    #- erase/^xx$/
    - xlit/āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜü/aaaaooooeeeeiiiiuuuuvvvvv/
    - derive/^([jqxy])u(;.*)$/$1v$2/
    - derive/^([aoe])([ioun])(;.*)$/$1$1$2$3/
    - xform/^([aoe])(ng)?(;.*)$/$1$1$2$3/
    - xform/^(\w+?)iu(;.*)/$1Ⓠ$2/
    - xform/^(\w+?)ei(;.*)/$1Ⓦ$2/
    - xform/^(\w+?)uan(;.*)/$1Ⓡ$2/
    - xform/^(\w+?)[uv]e(;.*)/$1Ⓣ$2/
    - xform/^(\w+?)un(;.*)/$1Ⓨ$2/
    - xform/^(\w+?)uo(;.*)/$1Ⓞ$2/
    - xform/^(\w+?)ie(;.*)/$1Ⓟ$2/
    - xform/^(\w+?)i?ong(;.*)/$1Ⓢ$2/
    - xform/^(\w+?)ing(;.*)/$1Ⓚ$2/
    - xform/^(\w+?)uai(;.*)/$1Ⓚ$2/
    - xform/^(\w+?)ai(;.*)/$1Ⓓ$2/
    - xform/^(\w+?)eng(;.*)/$1Ⓖ$2/
    - xform/^(\w+?)en(;.*)/$1Ⓕ$2/
    - xform/^(\w+?)[iu]ang(;.*)/$1Ⓛ$2/
    - xform/^(\w+?)ang(;.*)/$1Ⓗ$2/
    - xform/^(\w+?)ian(;.*)/$1Ⓜ$2/
    - xform/^(\w+?)an(;.*)/$1Ⓙ$2/
    - xform/^(\w+?)ou(;.*)/$1Ⓩ$2/
    - xform/^(\w+?)iao(;.*)/$1Ⓝ$2/
    - xform/^(\w+?)[iu]a(;.*)/$1Ⓧ$2/
    - xform/^(\w+?)ao(;.*)/$1Ⓒ$2/
    - xform/^(\w+?)ui(;.*)/$1Ⓥ$2/
    - xform/^(\w+?)in(;.*)/$1Ⓑ$2/
    - xform/^sh/Ⓤ/
    - xform/^ch/Ⓘ/
    - xform/^zh/Ⓥ/
    - xlit/ⓆⓌⓇⓉⓎⓊⒾⓄⓅⓈⒹⒻⒼⒽⒿⓀⓁⓏⓍⒸⓋⒷⓃⓂ/qwrtyuiopsdfghjklzxcvbnm/
    - abbrev/^([a-z]).+$/$1/


# === 辅助码方案 ===
# # 位于词库第一个分号后
# - xform|^(.{2});(.*?);.*$|$1;$2|                                  # 匹配当前方案，转换为 双拼；辅助码（当前方案）的形式
# - xform|^(\w+?);(.*?);.*$|$1;$2|
# --- 空 ---
fuzhu_kong: 
  __append: 
    - "xform/;.*$//"
 
# --- 小鹤辅助码 ---
# 位于词库第二个分号后
fuzhu_flypy:
  __append:
    # - xform/^(.{2}|\w+?);.*?;(.*?);.*$/$1;$2/   
    - derive|^(.{2});.*$|$1|                                          # 纯双拼的情况
    - derive|^(.{2});(\w)(\w).*$|$1$2|                                # 双拼+一位辅助码的情况
    - derive|^(.{2});(\w)(\w).*$|$1[$2|                               # 双拼+[一位辅助码的情况
    - derive|^(.{2});.*?,(\w)(\w).*$|$1$2|                            # 双拼+一位辅助码的情况
    - derive|^(.{2});.*?,(\w)(\w).*$|$1[$2|                           # 双拼+[一位辅助码的情况
                    
    - abbrev|^(.{2});(\w)(\w).*$|$1$2$3|                              # 双拼+2位辅助码的情况，abbrev类型不可以整句内输入2位辅助码，必须加o或/
    - abbrev|^(.{2});.*?,(\w)(\w).*$|$1$2$3|                          # 双拼+2位辅助码的情况，abbrev类型不可以整句内输入2位辅助码，必须加o或/

    - derive|^(.{2});(\w)(\w).*$|$1$2$3o|                             # 整句模式下，输入syffo 出单字 增强单字性能
    - derive|^(.{2});(\w)(\w).*$|$1$2$3/|                             # 整句模式下，输入syff/ 出单字 增强单字性能
    - derive|^(.{2});.*,(\w)(\w).*$|$1$2$3o|                          # 整句模式下，输入syffo 出单字 增强单字性能
    - derive|^(.{2});.*,(\w)(\w).*$|$1$2$3/|                          # 整句模式下，输入syff/ 出单字 增强单字性能
   
