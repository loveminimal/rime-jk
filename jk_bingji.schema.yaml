# Rime schema
# encoding: utf-8

# === 描述档 ===
schema:
  schema_id: jk_bingji
  name: 并击·知心
  author:
    - 发明人 gaboolic
    - 撰写者 Jack Liu <loveminimal@163.com>
  description: |
    - 知心并击，双拼·辅助码，小啊小并击
    - https://github.com/loveminimal/rime-jk
    - 辅助码方案源自万象拼音 https://github.com/amzxyz/rime_wanxiang_pro
  dependencies:
    - jk_ascii
  icon: "assets/fly_m.ico"
  ascii_icon: 'assets/ascii.ico'


# === 超级注释模块 ===
pro_comment_format:
  fuzhu_code: true
  candidate_length: 1
  fuzhu_type: flypy


# === 开关 ===
# reset: ← 0 1 →
switches:
  __include: jk.yaml:/switches


# === 引擎 ===
engine:
  processors:
    - ascii_composer
    - chord_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor

  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor

  translators:
    - punct_translator
    - table_translator@custom_phrase
    - script_translator
    - reverse_lookup_translator
    - lua_translator@*date_translator
    - lua_translator@*force_gc
    
  filters:
    # lua的filter：
    - lua_filter@*pro_comment_format
    - lua_filter@*is_in_user_dict
    # 反查的filter
    - simplifier
    - simplifier@emoji
    # - uniquifier
    - simplifier@chaifen


# === speller ===
speller:
  max_code_length: 5
  auto_select: false
  auto_select_pattern: ^[a-z]+/|^[a-df-zA-DF-Z]\w{3}|^e\w{4}|;[a-z]
  # [ ✗上屏 ]
  alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA
  # [ ✓上屏 ]
  initials: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA`
  delimiter: " '"
  algebra:
    # - erase/^xx$/
    - xlit/āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜü/aaaaooooeeeeiiiiuuuuvvvvv/
    - derive/^([jqxy])u(;.*)$/$1v$2/
    - derive/^([aoe])([ioun])(;.*)$/$1$1$2$3/
    - xform/^([aoe])(ng)?(;.*)$/$1$1$2$3/
    - xform/^(\w+?)iu(;.*)/$1Ⓠ$2/
    - xform/^(\w+?)ei(;.*)/$1Ⓦ$2/
    - xform/^(\w+?)uan(;.*)/$1Ⓡ$2/
    - xform/^(\w+?)[uv]e(;.*)/$1Ⓣ$2/
    - xform/^(\w+?)un(;.*)/$1Ⓨ$2/
    - xform/^(\w+?)uo(;.*)/$1Ⓞ$2/
    - xform/^(\w+?)ie(;.*)/$1Ⓟ$2/
    - xform/^(\w+?)i?ong(;.*)/$1Ⓢ$2/
    - xform/^(\w+?)ing(;.*)/$1Ⓚ$2/
    - xform/^(\w+?)uai(;.*)/$1Ⓚ$2/
    - xform/^(\w+?)ai(;.*)/$1Ⓓ$2/
    - xform/^(\w+?)eng(;.*)/$1Ⓖ$2/
    - xform/^(\w+?)en(;.*)/$1Ⓕ$2/
    - xform/^(\w+?)[iu]ang(;.*)/$1Ⓛ$2/
    - xform/^(\w+?)ang(;.*)/$1Ⓗ$2/
    - xform/^(\w+?)ian(;.*)/$1Ⓜ$2/
    - xform/^(\w+?)an(;.*)/$1Ⓙ$2/
    - xform/^(\w+?)ou(;.*)/$1Ⓩ$2/
    - xform/^(\w+?)iao(;.*)/$1Ⓝ$2/
    - xform/^(\w+?)[iu]a(;.*)/$1Ⓧ$2/
    - xform/^(\w+?)ao(;.*)/$1Ⓒ$2/
    - xform/^(\w+?)ui(;.*)/$1Ⓥ$2/
    - xform/^(\w+?)in(;.*)/$1Ⓑ$2/
    - xform/^sh/Ⓤ/
    - xform/^ch/Ⓘ/
    - xform/^zh/Ⓥ/
    - xlit/ⓆⓌⓇⓉⓎⓊⒾⓄⓅⓈⒹⒻⒼⒽⒿⓀⓁⓏⓍⒸⓋⒷⓃⓂ/qwrtyuiopsdfghjklzxcvbnm/
    - abbrev/^([a-z]).+$/$1/
    # --- 辅助码 ---
    - derive|^(.{2});.*$|$1|                                          # 纯双拼的情况
    - derive|^(.{2});(\w)(\w).*$|$1$2|                                # 双拼+一位辅助码的情况
    - derive|^(.{2});(\w)(\w).*$|$1[$2|                               # 双拼+[一位辅助码的情况
    - derive|^(.{2});.*?,(\w)(\w).*$|$1$2|                            # 双拼+一位辅助码的情况
    - derive|^(.{2});.*?,(\w)(\w).*$|$1[$2|                           # 双拼+[一位辅助码的情况
    - abbrev|^(.{2});(\w)(\w).*$|$1$2$3|                              # 双拼+2位辅助码的情况，abbrev类型不可以整句内输入2位辅助码，必须加o或/
    - abbrev|^(.{2});.*?,(\w)(\w).*$|$1$2$3|                          # 双拼+2位辅助码的情况，abbrev类型不可以整句内输入2位辅助码，必须加o或/
    - derive|^(.{2});(\w)(\w).*$|$1$2$3o|                             # 整句模式下，输入syffo 出单字 增强单字性能
    - derive|^(.{2});(\w)(\w).*$|$1$2$3/|                             # 整句模式下，输入syff/ 出单字 增强单字性能
    - derive|^(.{2});.*,(\w)(\w).*$|$1$2$3o|                          # 整句模式下，输入syffo 出单字 增强单字性能
    - derive|^(.{2});.*,(\w)(\w).*$|$1$2$3/|                          # 整句模式下，输入syff/ 出单字 增强单字性能

# chord_composer:
#   __include: jk.yaml:/chord_composer
chord_composer:
  # 字母表，包含用并击按键
  # 击键一律以字母表顺序排列
  # alphabet: "aqzswxdecfrvgtbhynjumki,lo.;p',./"
  alphabet: "aqzswxdecfrvgtbhynjumki,lo.;p'/"
  algebra:
    # --- 修改为JK键位 ---
    # - "xform/^,$/,/"
    # - "xform/^\.$/./"
    # 定义左手11键       
    - xform/^ef(?![左右])/y左/
    - xform/^wf(?![左右])/u左/
    - xform/^wef(?![左右])/i左/
    - xform/^we(?![左右])/o左/
    - xform/^qr(?![左右])/p左/

    - xform/^df(?![左右])/h左/
    - xform/^sf(?![左右])/j左/
    - xform/^sdf(?![左右])/k左/
    # - xform/^sd(?![左右])/l左/
    - xform/^af(?![左右])/;左/

    - xform/^dv(?![左右])/n左/
    - xform/^sv(?![左右])/m左/ 
    - xform/^sdv(?![左右])/,左/ 
    - xform/^dc(?![左右])/.左/ 
    - xform/^sc(?![左右])/?左/ 


    - xform/^sd(?![左右])/l左/ # 原 150

    # 定义右手15键
    - xform/ji(?![左右])$/q右/
    - xform/jo(?![左右])$/w右/
    - xform/jio(?![左右])$/e右/
    - xform/io(?![左右])$/r右/
    - xform/up(?![左右])$/t右/

    - xform/jk(?![左右])$/a右/
    - xform/jl(?![左右])$/s右/
    - xform/jkl(?![左右])$/d右/
    # - xform/kl(?![左右])$/f右/
    - xform/j;(?![左右])$/g右/    

    - xform/nk(?![左右])$/z右/
    - xform/nl(?![左右])$/x右/
    - xform/nkl(?![左右])$/c右/
    - xform/mk(?![左右])$/v右/
    - xform/ml(?![左右])$/b右/

    - xform/kl(?![左右])$/f右/ # 173

    - xform/,.(?![左右])$/Z右/
    - xform/;'(?![左右])$/%右/
    # --- 原运算规则 ---
    # # - "xform/^,$/,/"
    # # - "xform/^\.$/./"
    # # 定义左手11键       
    # - xform/^at(?![左右])/y左/
    # - xform/^ar(?![左右])/u左/
    # - xform/^ae(?![左右])/i左/
    # - xform/^aw(?![左右])/o左/
    # - xform/^qf(?![左右])/p左/
    # - xform/^as(?![左右])/l左/
    # - xform/^ad(?![左右])/k左/
    # - xform/^af(?![左右])/j左/
    # - xform/^ag(?![左右])/h左/
    # - xform/^ac(?![左右])/m左/
    # - xform/^av(?![左右])/n左/

    # # 定义右手15键
    # - xform/jp(?![左右])$/q右/
    # - xform/jo(?![左右])$/w右/
    # - xform/ji(?![左右])$/e右/
    # - xform/ul(?![左右])$/r右/
    # - xform/yl(?![左右])$/t右/
    # - xform/l;(?![左右])$/s右/
    # - xform/kl(?![左右])$/d右/
    # - xform/jk(?![左右])$/f右/
    # - xform/hl(?![左右])$/g右/    
    # - xform/mk(?![左右])$/z右/
    # - xform/nk(?![左右])$/x右/
    # - xform/ml(?![左右])$/c右/
    # - xform/nl(?![左右])$/v右/
    # - xform/ni(?![左右])$/b右/
    # - xform/;(?![左右])$/a右/
 # 并击过程中套用式样  
  prompt_format:
    # 加方括号
    - "xform/^(.*)$/[$1]/" 
  # 并击完成后套用式样
  output_format:
    - "xform/^(.*)左/$1/"
    - "xform/^(.*)右$/$1/"
    - "xform/^(.*)左(.*)右$/$1$2/"
    

# === segmentor ===
# abc_segmentor:
#   extra_tags:
#     - reverse_lookup

translator:
  dictionary: py
  prism: jk_bingji
  # initial_quality: 10000
  # 是否自动补全（预测），酌情开启。
  # ... 开启之后，打 ilqmmkyt 的时候，二选会是"床前明月光",
  # ... 但是影响3码简码，例如 idz 首选会变成"拆字"而非"扯犊子"
  enable_completion: false
  enable_charset_filter: true            # 是否开启字符集过滤
  encode_commit_history: true            # 是否对已上屏词自动成词
  # 默认为不超过 2 个字的候选项显示输入码；
  # ... 将 2 改为 0 可关闭编码提示，
  # ... 改为 1 则是只显示单字的输入码，依此类推
  spelling_hints: 1
  enable_sentence: false                 # 是否开启自动造句
  enable_user_dict: true                 # 是否开启用户词典
  enable_encoder: true                   # 是否开启自动造词
  comment_format: {comment}
  # preedit_format 影响到输入框的显示和“ Shift+⏎” 上屏的字符
  # preedit_format:                        
  #   - xform/([bpmfdtnljqx])n/$1iao/
  #   - xform/(\w)g/$1eng/
  #   - xform/(\w)q/$1iu/
  #   - xform/(\w)w/$1ei/
  #   - xform/([dtnlgkhjqxyvuirzcs])r/$1uan/
  #   - xform/(\w)t/$1ve/
  #   - xform/(\w)y/$1un/
  #   - xform/([dtnlgkhvuirzcs])o/$1uo/
  #   - xform/(\w)p/$1ie/
  #   - xform/([jqx])s/$1iong/
  #   - xform/(\w)s/$1ong/
  #   - xform/(\w)d/$1ai/
  #   - xform/(\w)f/$1en/
  #   - xform/(\w)h/$1ang/
  #   - xform/(\w)j/$1an/
  #   - xform/([gkhvuirzcs])k/$1uai/
  #   - xform/(\w)k/$1ing/
  #   - xform/([jqxnlb])l/$1iang/
  #   - xform/(\w)l/$1uang/
  #   - xform/(\w)z/$1ou/
  #   - xform/([gkhvuirzcs])x/$1ua/
  #   - xform/(\w)x/$1ia/
  #   - xform/(\w)c/$1ao/
  #   - xform/([dtgkhvuirzcs])v/$1ui/
  #   - xform/(\w)b/$1in/
  #   - xform/(\w)m/$1ian/
  #   - xform/([aoe])\1(\w)/$1$2/
  #   - "xform/(^|[ '])v/$1zh/"
  #   - "xform/(^|[ '])i/$1ch/"
  #   - "xform/(^|[ '])u/$1sh/"
  #   - xform/([jqxy])v/$1u/
  #   - xform/([nl])v/$1ü/
  #   - xform/ü/v/


# === Lua 配置: 日期时间(整合版)的触发关键字 ===
date_translator:
  jk_datetime: iii


# === 反查 ===
# reverse_lookup:
#   dictionary: jk_wubi
#   # prefix: "`"
#   prefix: "%"
#   suffix: "'"
#   tips: 〔五笔·反查〕
#   preedit_format:
#     # - xform/([nl])v/$1ü/
#     # - xform/([nl])ue/$1üe/
#     # - xform/([jqxy])v/$1u/
reverse_lookup:
  __include: jk.yaml:/reverse_lookup

# === 自定义短语：custom_phrase.txt ===
custom_phrase:
  dictionary: ""
  user_dict: custom_phrase 
  db_class: stabledb
  enable_completion: false               # 补全提示
  enable_sentence: false                 # 禁止造句
  initial_quality: 99


# === Emoji ===
emoji:
  option_name: emoji
  opencc_config: emoji.json
  inherit_comment: false


# 显示鹤形拆分
# 拆分规则 https://flypy.com/help/#/ux
chaifen:
  option_name: chaifen
  opencc_config: wb_cf.json
  tips: all
  show_in_comment: true
  comment_format:
    - "xform/-/ /"
    # - "xform/	/ /"


# === 标点符号控制 ===
punctuator:
  import_preset: default
  symbols:
    __include: symbols_z:/symbols

# === 键位绑定 ===
key_binder:
  import_preset: default
  # 迁移至 default.custom.yaml ，以方便多方案共享


recognizer:
  # import_preset: default
  patterns:
    # reverse_lookup: "`[a-z]*'?$"
    reverse_lookup: "^%[a-z]*:?$"
    punct: "^Z([0-9]|10|[A-Za-z]+)$"
